var y=Object.defineProperty;var d=(o,i,t)=>i in o?y(o,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[i]=t;var c=(o,i,t)=>(d(o,typeof i!="symbol"?i+"":i,t),t),w=(o,i,t)=>{if(!i.has(o))throw TypeError("Cannot "+t)};var l=(o,i,t)=>{if(i.has(o))throw TypeError("Cannot add the same private member more than once");i instanceof WeakSet?i.add(o):i.set(o,t)};var h=(o,i,t)=>(w(o,i,"access private method"),t);var a,u;const f=class extends Map{constructor(t){super();l(this,a);c(this,"name");this.name=typeof t=="string"?t:"unknown items"}array(t=!1){return t?this.map((e,r)=>r):this.map(e=>e)}at(t){t>this.size-1&&(t=t%(this.size-1)),t<0&&(t=this.size+t%(this.size-1));const e=this.values();for(let r=0;r<t;++r)e.next();return e.next().value}every(t){for(const[e,r]of this.entries())if(!t(r,e))return!1;return!0}filter(t){const e=new f(this.name);for(const[r,s]of this.entries())t(s,r)&&e.set(r,s);return e}find(t){for(const[e,r]of this.entries())if(t(r,e))return r}findKey(t){for(const[e,r]of this.entries())if(t(r,e))return e}first(t){if(t&&t<0)return this.last(-t);const e=this.values();if(!(t&&t>this.size))return typeof t=="number"&&!isNaN(t)?Array.from({length:t},()=>e.next().value):e.next().value}firstKey(t){if(t&&t<0)return this.firstKey(-t);const e=this.keys();if(!(t&&t>this.size))return typeof t=="number"&&!isNaN(t)?Array.from({length:t},()=>e.next().value):e.next().value}json(){const t={};for(const e of this.entries())t[`${e[0]}`]=e[1];return t}keyAt(t){t>this.size-1&&(t=t%(this.size-1)),t<0&&(t=this.size+t%(this.size-1));const e=this.keys();for(let r=0;r<t;++r)e.next();return e.next().value}last(t){if(t&&t<0)return this.first(-t);const e=this.array();return typeof t=="number"&&!isNaN(t)?e.slice(-t):e[e.length-1]}lastKey(t){if(t&&t<0)return this.firstKey(-t);const e=this.array(!0);return typeof t=="number"&&!isNaN(t)?e.slice(-t):e[e.length-1]}map(t){const e=[];for(const[r,s]of this.entries())e.push(t(s,r));return e}random(t){if(!t)return h(this,a,u).call(this);const e=[];for(let r=t;r>0;--r){const s=h(this,a,u).call(this);s&&e.push(s)}return e}randomKey(t){if(!t)return h(this,a,u).call(this,!0);const e=[];for(let r=t;r>0;--r){const s=h(this,a,u).call(this,!0);s&&e.push(s)}return e}reduce(t,e){const r=this.entries();let s,n=e===void 0?r.next().value:e;for(;(s=r.next().value)!==void 0;)n=t(n,s);return n}some(t){for(const[e,r]of this.entries())if(t(r,e))return!0;return!1}sort(t=()=>0){const e=[...this.entries()];e.sort((s,n)=>t(s[1],n[1],s[0],n[0]));const r=new f(this.name);for(const[s,n]of e)r.set(s,n);return r}split(t){const e=new f(this.name),r=new f(this.name);for(const[s,n]of this.entries())t(n,s)?e.set(s,n):r.set(s,n);return[e,r]}toString(){return`[BetterMap[${this.size}] of <${this.name}>]`}toJSON(){return this.json()}transform(t){const e=new f(this.name);return this.forEach((r,s)=>{e.set(s,t(r,s))}),e}combine(...t){for(const e of t)for(const r of e.entries())this.has(r[0])||this.set(r[0],r[1]);return this}static from(t){const e=new f;return t instanceof Map&&t.forEach((r,s)=>e.set(s,r)),Array.isArray(t)&&t.forEach(([r,s])=>e.set(r,s)),e}static union(...t){const e=t[0]instanceof f?t[0]:f.from(t[0]);t.shift();for(const r of t)for(const s of r.entries())e.has(s[0])||e.set(s[0],s[1]);return e}static intersect(...t){const e=t[0]instanceof f?t[0]:f.from(t[0]);return t.shift(),e.filter((s,n)=>t.every(m=>m.has(n)))}};let v=f;a=new WeakSet,u=function(t=!1){const e=Math.floor(Math.random()*this.size),r=t?this.keys():this.values();for(let s=0;s<e;++s)r.next();return r.next().value};export{v as B};
